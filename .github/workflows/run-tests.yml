name: Execute golang tests

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0
          terraform_wrapper: false
      - name: Install Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.36.1/terragrunt_linux_amd64
          mv terragrunt_linux_amd64 terragrunt
          chmod u+x terragrunt
          mv terragrunt /usr/local/bin/terragrunt
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.0'
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare variable files
        working-directory: terragrunt
        run: |
          RUNNER_IP=${{ steps.ip.outputs.ipv4 }}

          cat <<EOF >./dev/env.hcl
          locals {
            subscription_id     = "${SUBSCRIPTION_ID}"
            env                 = "dev"
            location            = "west europe"
            storage_allowed_pip = ["${RUNNER_IP}"]
          }
          EOF

          cat <<EOF >state.yaml
          subscription_id: ${SUBSCRIPTION_ID}
          resource_group_name: tfstate
          storage_account_name: atitfstate
          container_name: tfstate
          EOF
        env: 
          SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      - name: Run tests
        working-directory: terratest
        run: |
          go test *.go -v -timeout 60m
        env: 
          ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          AZURE_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.TENANT_ID }}
